name: Publish

on:
  push:
    tags: [ v* ]

env:
  DOTNET_VERSION: 6.0.x
  BUNDLE_PLATFORMS: x64|arm64

jobs:
  publish:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Use .NET ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Use MSBuild
      uses: microsoft/setup-msbuild@v1.1

    - name: Setup Version
      id: setup_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
      shell: bash

    - name: Update package manifest
      run: |
        [Reflection.Assembly]::LoadWithPartialName("System.Xml.Linq")
        $path = "WinQuickLook.Package/package.appxmanifest"
        $doc = [System.Xml.Linq.XDocument]::Load($path)
        $xName = [System.Xml.Linq.XName]"{http://schemas.microsoft.com/appx/manifest/foundation/windows10}Identity"
        $doc.Root.Element($xName).Attribute("Version").Value = "${{ steps.setup_version.outputs.VERSION }}.0";
        $doc.Save($path)

    - name: Build application
      run: >
        msbuild .\WinQuickLook.sln
        /Restore
        /p:Configuration=Release
        /p:Version="${{ steps.setup_version.outputs.VERSION }}"
        /p:UapAppxPackageBuildMode=StoreUpload
        /p:AppxBundlePlatforms="${{ env.BUNDLE_PLATFORMS }}"
        /p:AppxPackageDir=..\packed
        /p:AppxBundle=Always
        /p:AppxPackageSigningEnabled=false
        /p:PackageCertificateThumbprint=""
        /p:PublishReadyToRun=true
        /verbosity:minimal

    - name: Upload MSIX
      uses: actions/upload-artifact@v3
      with:
        name: msix
        path: packed\*.msixupload
