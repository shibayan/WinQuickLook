trigger:
  branches:
    include:
    - master
  tags:
    include:
    - v*

variables:
- group: Secrets
- name: BuildConfiguration
  value: Release
- name: DotNetSdkVersion
  value: 3.1.x
- name: NuGetCliVersion
  value: 5.x
- name: BundlePlatforms
  value: x86|x64
- name: IsGitHubTag
  value: $[startsWith(variables['Build.SourceBranch'], 'refs/tags/v')]

stages:
- stage: Build
  jobs:
  - job: Build_For_Test
    condition: ne(variables['IsGitHubTag'], true)
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: $(DotNetSdkVersion)

    - task: NuGetToolInstaller@1
      inputs:
        versionSpec: $(NuGetCliVersion)

    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: '**/*.sln'
        feedsToUse: 'select'
        verbosityRestore: 'Normal'

    - task: MSBuild@1
      inputs:
        solution: '**/*.csproj'
        configuration: $(BuildConfiguration)

  - job: Build_For_Store
    condition: eq(variables['IsGitHubTag'], true)
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: DownloadSecureFile@1
      name: signingCert
      inputs:
        secureFile: 'WinQuickLook.pfx'

    - powershell: 'echo "##vso[task.setvariable variable=ApplicationVersion]$($env:Build_SourceBranchName.Substring(1))"'
      displayName: 'Set ApplicationVersion'

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: $(DotNetSdkVersion)

    - task: NuGetToolInstaller@1
      inputs:
        versionSpec: $(NuGetCliVersion)

    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: '**/*.sln'
        feedsToUse: 'select'
        verbosityRestore: 'Normal'

    - task: MSBuild@1
      inputs:
        solution: '**/*.sln'
        configuration: $(BuildConfiguration)
        msbuildArguments: /p:Version="$(ApplicationVersion)" /p:UapAppxPackageBuildMode=CI /p:AppxBundlePlatforms="$(BundlePlatforms)" /p:AppxPackageDir="$(Build.SourcesDirectory)/packed" /p:AppxBundle=Always /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="" /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)" /p:PackageCertificatePassword="$(PfxPassword)"

    - publish: packed
      artifact: msix